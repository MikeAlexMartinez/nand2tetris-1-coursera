
class Menu {

  field int speed;
  field Scoreboard board;

  constructor Menu new() {
    let speed = 1;
    let board = Scoreboard.new(speed);
    return this;
  }

  method Scoreboard show(bool played) {
    var boolean begin;
    var char key;
    
    do displayMenu(played);
    while(~begin) {
      while(key = 0) {
        let key = Keyboard.keyPressed();
      }

      // Press ⬆️ to increase speed
      if (key = 131) {
        if (speed < 10) {
          let speed = speed + 1;
          do board.updateSpeed(speed);
        }
      }

      // Press ⬇️ to reduce speed
      if (key = 133) {
        if (speed > 1) {
          let speed = speed - 1;
          do board.updateSpeed(speed);
        }
      }

      // Press b to begin
      if (key = 66) {
        let begin = true;
      }

      while(~(key = 0)) {
        let key = Keyboard.keyPressed();
      }
    }

    return board;
  }

  method void displayMenu(bool played) {
    if (played) {
      // Welcome
      do Output.moveCursor(5, 30);
      do Output.printString("Welcome to SNAKE");

      // Meet snake
      do Output.moveCursor(7, 24);
      do Output.printString("Meet cornflake the veggie snake!");

    } else {
      // Oops
      do Output.moveCursor(5, 30);
      do Output.printString("Oops, you crashed!");

      // Still Hungry
      do Output.moveCursor(7, 24);
      do Output.printString("Cornflake is still hungry!");
    }

    // Description
    do Output.moveCursor(9, 25);
    do Output.printString("Use your d pad to move the snake.");

    // Set being instructions
    do Output.moveCursor(11, 30);
    do Output.printString("Press b to ");

    if (played) {
      do Output.printString("Restart!");
    } else {
      do Output.printString("Begin!");
    }

    // Set Speed Instructions
    do Output.moveCursor(13, 22);
    do Output.printString("Change Speed with up or down arrows");

    return;
  }

  method void displayScore() {
    return;
  }
}