
/**
 * Represents a Snake game.
 */
class SnakeGame {

  static SnakeGame instance;   // the singleton, a SnakeGame instance
  field Snake snake; 
  field Scoreboard scoreboard; // controls the scoreboard at the right of the screen
  field int speed;             // controls the speed of the snake and scoring accumulator

  constructor SnakeGame new() {
    do Screen.clearScreen();
    do LCGRandom.setSeed(10);

    let speed = 10;
    let scoreboard = Scoreboard.new();

    return this;
  }

  method void run() {
    var char key; // key currently pressed by user
    var boolean exit;
    var int collision;
    let snake = Snake.new(4); // set direction to right
    do scoreboard.updateDirection(4);
    let exit = false;

    while(~exit) {
      while (key = 0) {
        let key = Keyboard.keyPressed();
        let collision = snake.move();
        do scoreboard.showState(collision);
      }

      // up arrow
      if (key = 131) {
        do scoreboard.updateDirection(1);
        do snake.updateDirection(1);
      }
      // down arrow
      if (key = 133) {
        do scoreboard.updateDirection(2);
        do snake.updateDirection(2);
      }
      // left arrow
      if (key = 130) {
        do scoreboard.updateDirection(3);
        do snake.updateDirection(3);
      }
      // right arrow
      if (key = 132) {
        do scoreboard.updateDirection(4);
        do snake.updateDirection(4);
      }

      // waits for the key to be released
      while (~(key = 0)) {
        let key = Keyboard.keyPressed();
        let collision = snake.move();
        do scoreboard.showState(collision);
      }
    }

    // cleanup
    do snake.dispose();

    return;
  }

  method void dispose() {
    do scoreboard.dispose();
    do Memory.deAlloc(this);
    return;
  }
}