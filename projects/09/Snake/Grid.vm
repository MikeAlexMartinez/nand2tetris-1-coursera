function Grid.new 0
push constant 2
call Memory.alloc 1
pop pointer 0
push pointer 0
call Grid.drawGrid 1
pop temp 0
push pointer 0
call Grid.drawSnake 1
pop temp 0
push pointer 0
return
function Grid.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Grid.drawGrid 0
push argument 0
pop pointer 0
push pointer 0
push constant 1
neg
push constant 8
call Grid.drawVertical 3
pop temp 0
push pointer 0
push constant 1
neg
push constant 31
call Grid.drawVertical 3
pop temp 0
push pointer 0
push constant 1
neg
push constant 0
push constant 9
push constant 21
push constant 16
call Grid.drawHorizontal 6
pop temp 0
push pointer 0
push constant 1
neg
push constant 239
push constant 9
push constant 21
push constant 16
call Grid.drawHorizontal 6
pop temp 0
push constant 0
return
function Grid.drawSnake 0
push argument 0
pop pointer 0
push pointer 0
push constant 1
neg
push constant 112
push constant 14
push constant 5
push constant 16
call Grid.drawHorizontal 6
pop temp 0
push constant 0
return
function Grid.detectCollision 1
push argument 0
pop pointer 0
push constant 0
pop local 0
push local 0
return
function Grid.updateSnake 0
push argument 0
pop pointer 0
push constant 0
return
function Grid.drawFood 0
push argument 0
pop pointer 0
push constant 0
return
function Grid.drawVertical 5
push argument 0
pop pointer 0
push constant 16384
push argument 2
add
pop local 0
push constant 0
pop local 1
push constant 255
pop local 2
push constant 32
pop local 3
push local 1
push local 3
call Math.multiply 2
pop local 4
label WHILE_EXP0
push local 1
push local 2
gt
not
not
if-goto WHILE_END0
push local 0
push local 4
add
push argument 1
call Memory.poke 2
pop temp 0
push local 1
push constant 1
add
pop local 1
push local 4
push local 3
add
pop local 4
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Grid.drawHorizontal 5
push argument 0
pop pointer 0
push argument 2
pop local 1
push local 1
push argument 5
add
pop local 2
push argument 3
pop local 3
push local 3
push argument 4
add
pop local 4
label WHILE_EXP0
push local 1
push local 2
gt
not
not
if-goto WHILE_END0
push constant 16384
push local 3
add
push constant 32
push local 1
call Math.multiply 2
add
push constant 1
sub
pop local 0
label WHILE_EXP1
push local 3
push local 4
gt
not
not
if-goto WHILE_END1
push local 0
push constant 1
add
pop local 0
push local 0
push argument 1
call Memory.poke 2
pop temp 0
push local 3
push constant 1
add
pop local 3
goto WHILE_EXP1
label WHILE_END1
push argument 3
pop local 3
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
